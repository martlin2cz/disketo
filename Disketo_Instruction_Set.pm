#!/usr/bin/perl
use strict;

package Disketo_Instruction_Set; 
my $VERSION=2.0.0;
  
use Disketo_Instructions; 

  
########################################################################
# The instruction set. Creates the mapping between the disketo script
# statements and particular perl functions.
########################################################################

sub commands() {
	my %table = (
		# instructions generated by ./generate-instructions-set-module.sh
  
		# --- load    -----------------------
		'load' => { 
			'name' => 'load', 
			'method' => \&Disketo_Instructions::load, 
			'requires' => [], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Loads the dirs and files from directories or files' 
		}, 
		  
		# --- group_files_by_names    -----------------------
		'group_files_by_names' => { 
			'name' => 'group_files_by_names', 
			'method' => \&Disketo_Instructions::group_files_by_names, 
			'requires' => [], 
			'produces' => 'file names', 
			'params' => [], 
			'doc' => 'Groups files by names' 
		}, 
		  
		# --- group_dirs_by_names    -----------------------
		'group_dirs_by_names' => { 
			'name' => 'group_dirs_by_names', 
			'method' => \&Disketo_Instructions::group_dirs_by_names, 
			'requires' => [], 
			'produces' => 'dir names', 
			'params' => [], 
			'doc' => 'Groups dirs by names.' 
		}, 
		  
		# --- compute_files_matching   matcher -----------------------
		'compute_files_matching' => { 
			'name' => 'compute_files_matching', 
			'method' => \&Disketo_Instructions::compute_files_matching, 
			'requires' => [], 
			'produces' => 'files matching', 
			'params' => ['matcher', ], 
			'doc' => 'Computes files matching' 
		}, 
		  
		# --- compute_dirs_matching   matcher -----------------------
		'compute_dirs_matching' => { 
			'name' => 'compute_dirs_matching', 
			'method' => \&Disketo_Instructions::compute_dirs_matching, 
			'requires' => [], 
			'produces' => 'dirs matching', 
			'params' => ['matcher', ], 
			'doc' => 'Computes dirs matching' 
		}, 
		  
		# --- compute_files_of_dir_matching   file_matcher -----------------------
		'compute_files_of_dir_matching' => { 
			'name' => 'compute_files_of_dir_matching', 
			'method' => \&Disketo_Instructions::compute_files_of_dir_matching, 
			'requires' => ['files matching', ], 
			'produces' => 'dirs matches', 
			'params' => ['file_matcher', ], 
			'doc' => 'Computes files of dir matching' 
		}, 
		  
		# --- group_files_by_names    -----------------------
		'group_files_by_names' => { 
			'name' => 'group_files_by_names', 
			'method' => \&Disketo_Instructions::group_files_by_names, 
			'requires' => [], 
			'produces' => 'file names', 
			'params' => [], 
			'doc' => 'Groups files by names' 
		}, 
		  
		# --- group_dirs_by_names    -----------------------
		'group_dirs_by_names' => { 
			'name' => 'group_dirs_by_names', 
			'method' => \&Disketo_Instructions::group_dirs_by_names, 
			'requires' => [], 
			'produces' => 'dir names', 
			'params' => [], 
			'doc' => 'Groups dirs by names.' 
		}, 
		  
		# --- group_files_by_custom   groupper, files_group_name -----------------------
		'group_files_by_custom' => { 
			'name' => 'group_files_by_custom', 
			'method' => \&Disketo_Instructions::group_files_by_custom, 
			'requires' => [], 
			'produces' => 'file groups', 
			'params' => ['groupper', 'files_group_name', ], 
			'doc' => 'Groups files by groupper' 
		}, 
		  
		# --- group_dirs_by_custom   groupper, dirs_group_name -----------------------
		'group_dirs_by_custom' => { 
			'name' => 'group_dirs_by_custom', 
			'method' => \&Disketo_Instructions::group_dirs_by_custom, 
			'requires' => [], 
			'produces' => 'dir groups', 
			'params' => ['groupper', 'dirs_group_name', ], 
			'doc' => 'Groups dirs by groupper' 
		}, 
		  
		# --- count_files    -----------------------
		'count_files' => { 
			'name' => 'count_files', 
			'method' => \&Disketo_Instructions::count_files, 
			'requires' => [], 
			'produces' => 'files counts', 
			'params' => [], 
			'doc' => 'Counts files' 
		}, 
		  
		# --- compute_custom_for_each_dir   dirs_groups_name, computer -----------------------
		'compute_custom_for_each_dir' => { 
			'name' => 'compute_custom_for_each_dir', 
			'method' => \&Disketo_Instructions::compute_custom_for_each_dir, 
			'requires' => [], 
			'produces' => 'custom for dirs', 
			'params' => ['dirs_groups_name', 'computer', ], 
			'doc' => 'Computes for each dir' 
		}, 
		  
		# --- compute_custom_for_each_file   files_groups_name, computer -----------------------
		'compute_custom_for_each_file' => { 
			'name' => 'compute_custom_for_each_file', 
			'method' => \&Disketo_Instructions::compute_custom_for_each_file, 
			'requires' => [], 
			'produces' => 'custom for files', 
			'params' => ['files_groups_name', 'computer', ], 
			'doc' => 'Computes for each file' 
		}, 
		  
		# --- load_stats    -----------------------
		'load_stats' => { 
			'name' => 'load_stats', 
			'method' => \&Disketo_Instructions::load_stats, 
			'requires' => [], 
			'produces' => 'stats', 
			'params' => [], 
			'doc' => 'Loads stats of files' 
		}, 
		  
		# --- filter_dirs_matching_pattern   pattern -----------------------
		'filter_dirs_matching_pattern' => { 
			'name' => 'filter_dirs_matching_pattern', 
			'method' => \&Disketo_Instructions::filter_dirs_matching_pattern, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['pattern', ], 
			'doc' => 'Filters dirs matching pattern' 
		}, 
		  
		# --- filter_dirs_matching_custom   matcher -----------------------
		'filter_dirs_matching_custom' => { 
			'name' => 'filter_dirs_matching_custom', 
			'method' => \&Disketo_Instructions::filter_dirs_matching_custom, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['matcher', ], 
			'doc' => 'Filters dirs matching matcher' 
		}, 
		  
		# --- filter_dirs_with_files_matching_pattern   files_pattern, count -----------------------
		'filter_dirs_with_files_matching_pattern' => { 
			'name' => 'filter_dirs_with_files_matching_pattern', 
			'method' => \&Disketo_Instructions::filter_dirs_with_files_matching_pattern, 
			'requires' => ['files matching', ], 
			'produces' => '', 
			'params' => ['files_pattern', 'count', ], 
			'doc' => 'Filters dirs which files matching pattern' 
		}, 
		  
		# --- filter_dirs_with_files_matching_custom   files_matcher, count -----------------------
		'filter_dirs_with_files_matching_custom' => { 
			'name' => 'filter_dirs_with_files_matching_custom', 
			'method' => \&Disketo_Instructions::filter_dirs_with_files_matching_custom, 
			'requires' => ['files matching', ], 
			'produces' => '', 
			'params' => ['files_matcher', 'count', ], 
			'doc' => 'Filters dirs with files matching matcher' 
		}, 
		  
		# --- filter_files_matching_pattern   pattern -----------------------
		'filter_files_matching_pattern' => { 
			'name' => 'filter_files_matching_pattern', 
			'method' => \&Disketo_Instructions::filter_files_matching_pattern, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['pattern', ], 
			'doc' => 'Filters files matching pattern' 
		}, 
		  
		# --- filter_files_matching_custom   matcher -----------------------
		'filter_files_matching_custom' => { 
			'name' => 'filter_files_matching_custom', 
			'method' => \&Disketo_Instructions::filter_files_matching_custom, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['matcher', ], 
			'doc' => 'Filters files matching matcher' 
		}, 
		  
		# --- filter_custom_duplicate_files   files_group_name, groupper -----------------------
		'filter_custom_duplicate_files' => { 
			'name' => 'filter_custom_duplicate_files', 
			'method' => \&Disketo_Instructions::filter_custom_duplicate_files, 
			'requires' => ['files groups', ], 
			'produces' => '', 
			'params' => ['files_group_name', 'groupper', ], 
			'doc' => 'Filter duplicate files' 
		}, 
		  
		# --- filter_duplicate_files_by_name    -----------------------
		'filter_duplicate_files_by_name' => { 
			'name' => 'filter_duplicate_files_by_name', 
			'method' => \&Disketo_Instructions::filter_duplicate_files_by_name, 
			'requires' => ['files names', ], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Filter duplicate files by names' 
		}, 
		  
		# --- filter_custom_duplicate_dirs   dirs_groups_name, groupper -----------------------
		'filter_custom_duplicate_dirs' => { 
			'name' => 'filter_custom_duplicate_dirs', 
			'method' => \&Disketo_Instructions::filter_custom_duplicate_dirs, 
			'requires' => ['dirs groups', ], 
			'produces' => '', 
			'params' => ['dirs_groups_name', 'groupper', ], 
			'doc' => 'Filters duplicate files by custom groups' 
		}, 
		  
		# --- filter_duplicate_dirs_by_name    -----------------------
		'filter_duplicate_dirs_by_name' => { 
			'name' => 'filter_duplicate_dirs_by_name', 
			'method' => \&Disketo_Instructions::filter_duplicate_dirs_by_name, 
			'requires' => ['dirs names', ], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Filters duplicate dirs by names' 
		}, 
		  
		# --- filter_dirs_by_duplicate_files_by_name   count -----------------------
		'filter_dirs_by_duplicate_files_by_name' => { 
			'name' => 'filter_dirs_by_duplicate_files_by_name', 
			'method' => \&Disketo_Instructions::filter_dirs_by_duplicate_files_by_name, 
			'requires' => ['files matching', 'files names', ], 
			'produces' => '', 
			'params' => ['count', ], 
			'doc' => 'Filters duplivate files by names' 
		}, 
		  
		# --- filter_dirs_by_custom_duplicate_files   groupper, count -----------------------
		'filter_dirs_by_custom_duplicate_files' => { 
			'name' => 'filter_dirs_by_custom_duplicate_files', 
			'method' => \&Disketo_Instructions::filter_dirs_by_custom_duplicate_files, 
			'requires' => ['files matching', 'files groups', ], 
			'produces' => '', 
			'params' => ['groupper', 'count', ], 
			'doc' => 'Filters dirs with duplicate files by custom groups' 
		}, 
		  
		# --- print_dirs_simply    -----------------------
		'print_dirs_simply' => { 
			'name' => 'print_dirs_simply', 
			'method' => \&Disketo_Instructions::print_dirs_simply, 
			'requires' => [], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Prints dirs simply' 
		}, 
		  
		# --- print_dirs_custom   printer -----------------------
		'print_dirs_custom' => { 
			'name' => 'print_dirs_custom', 
			'method' => \&Disketo_Instructions::print_dirs_custom, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['printer', ], 
			'doc' => 'Prints dirs by printer' 
		}, 
		  
		# --- print_files_simply    -----------------------
		'print_files_simply' => { 
			'name' => 'print_files_simply', 
			'method' => \&Disketo_Instructions::print_files_simply, 
			'requires' => [], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Prints files simply' 
		}, 
		  
		# --- print_files_custom   printer -----------------------
		'print_files_custom' => { 
			'name' => 'print_files_custom', 
			'method' => \&Disketo_Instructions::print_files_custom, 
			'requires' => [], 
			'produces' => '', 
			'params' => ['printer', ], 
			'doc' => 'Prints files by printer' 
		}, 
		  
		# --- context_stats    -----------------------
		'context_stats' => { 
			'name' => 'context_stats', 
			'method' => \&Disketo_Instructions::context_stats, 
			'requires' => [], 
			'produces' => '', 
			'params' => [], 
			'doc' => 'Prints the info about the current context' 
		}, 
		
	);
	
	return \%table;
}

sub prepending_instruction($$) {
	my ($instruction, $prepending_command) = @_;
	
	my $command = $prepending_command->{"statement_name"};
	my $arguments = [];
	
	#TODO arguments := if $prepending_instruction takes XYZ, then pick from $instruction 
	
	return {"command" => $command, "arguments" => $arguments };
}
