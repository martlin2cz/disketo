# test filter dirs ...
load  resources $$$
filter dirs named "foo"
print dirs simply

load  resources $$$
filter dirs matching-pattern "o" case-insensitive
print dirs simply

load  resources $$$
filter dirs matching-pattern "o" case-sensitive
print dirs simply

load  resources $$$
filter dirs matching-custom-matcher sub {
	my ($file, $context) = @_;
	return (length($file) > 20);
}
print dirs simply


# test filter dirs having children ...
#TODO prepare

load  resources $$$
filter dirs having none children having-extension "txt"
print dirs with children-names

load  resources $$$
filter dirs having more-than 3 children having-extension "txt"
print dirs with children-names

load  resources $$$
filter dirs having less-than 2 children having-extension "txt"
print dirs with children-names

load  resources $$$
filter dirs having none children matching-custom-matcher sub {
	my ($file, $context) = @_;
	return length($file) < 20;
}
print dirs with children-names

load  resources $$$
filter dirs having more-than 3 children matching-pattern "file" case-sensitive
print dirs with children-names

# test filter dirs having same ...
group dirs by-name as-meta "with same name"
group dirs by-name-and-children-size as-meta "with same name and children size"
group dirs by-name-and-children-size as-meta "dirs-sizes"

load  resources $$$
filter dirs having more-than 1 of-the-same name
print dirs with its-group of-the-same-name

load  resources $$$
filter dirs having more-than 1 of-the-same name-and-size 
#TODO name-and-children-count, name-and-children-size
print dirs with its-group of-the-same-name-and-children-size

load  resources $$$
filter dirs having none of-the-same name
print dirs with its-group of-the-same-name



